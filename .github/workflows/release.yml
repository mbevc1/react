name: ReAcT-release
on:
  push:
    tags:
      - 'v*'

jobs:
  release:
    name: Release
    runs-on: ubuntu-latest
    #needs: [ test ]
    steps:
#    - name: Check out code
#      uses: actions/checkout@master
#    - name: goreleaser
#      uses: docker://goreleaser/goreleaser
#      env:
#        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#      with:
#        args: release
#      if: success()
    - name: Checkout
      uses: actions/checkout@v2

    - name: Unshallow
      run: git fetch --prune --unshallow

    - name: Set up Go 1.x
      uses: actions/setup-go@v2
      with:
        go-version: ^1.14
      id: go

    - name: Check out code into the Go module directory
      uses: actions/checkout@v2

    - name: Generate build tag
      run: |
        VERSION=$(git describe --tags --always --dirty --match=v* 2> /dev/null || echo v0)
        echo "::set-env name=VERSION::$VERSION"
      shell: /bin/bash -e {0}

    - name: Print build tag
      run: echo "${VERSION}"

    - name: Run GoReleaser
      uses: goreleaser/goreleaser-action@v1
      with:
        version: latest
        args: release --rm-dist
        workdir: .
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        VERSION: ${{ env.VERSION }}
